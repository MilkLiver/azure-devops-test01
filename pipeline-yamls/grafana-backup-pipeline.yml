
# variables:
#   solution: '**/*.sln'
#   buildPlatform: 'Any CPU'
#   buildConfiguration: 'Release'
variables:
- group: "grafana-env"

trigger: none

stages:
- stage: "backup_grafana_all_dashboards"
  jobs:
  - job: "get_current_grafana_all_dashboards"
    pool:
      name: "selfVM"
      # vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      persistCredentials: true
    - script: python3 python-scripts/grafana_backup.py
      workingDirectory: '$(System.DefaultWorkingDirectory)'
      env:
        GRAFANA_BEARER: '$(GRAFANA_BEARER)'
    - publish: '$(System.DefaultWorkingDirectory)/grafana_backup_data'
      artifact: 'backup-GrafanaDashboards'
  - job: "git_push_all_grafana_dashboards"
    dependsOn: "get_current_grafana_all_dashboards"
    pool:
      vmImage: "ubuntu-latest"
    steps:
    - checkout: self
      persistCredentials: true
    - download: current
      artifact: 'backup-GrafanaDashboards'  
    - script: 'ls $(Pipeline.Workspace)'
    - script: 'ls $(Pipeline.Workspace)/backup-GrafanaDashboards'
    - script: 'mv $(Pipeline.Workspace)/backup-GrafanaDashboards $(System.DefaultWorkingDirectory)/grafana_backup_data'
    - script: git config --global user.email "dio@example.com"
    - script: git config --global user.name "dio"
    - script: git add -A
    - script: git commit -m "update to newest grafana dashboards"
    - script: git push origin HEAD:main